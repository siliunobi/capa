load consistency

mod JESSY-ANALYSIS is
  inc INITIAL-STATES .
  inc CONSISTENCY .

  --- Init parameters 
  eq nbOfRoTxns = 0 .  eq nbOfOpsPerRoTxn = 0 .
  eq nbOfWoTxns = 0 .  eq nbOfOpsPerWoTxn = 0 .
  eq nbOfRwTxns = 3 .  eq nbOfOpsPerRwTxn = 2 .  --- must be even number
  eq nbOfServs  = 2 .  eq nbOfKeys = 2 .  eq nbOfRepls = 1 .


  op initConfig : -> Config .
  eq initConfig = init(nbOfRoTxns,nbOfWoTxns,nbOfRwTxns,
      nbOfOpsPerRoTxn,nbOfOpsPerWoTxn,nbOfOpsPerRwTxn, 
      nbOfServs,nbOfKeys,nbOfRepls) . 


---(
  eq initConfig = < tb : Table | table: [replicatingSites(x, 1) ;; 
                                         replicatingSites(y, 1) ;; 
                                         replicatingSites(z, 3)] > 
                 < m : Monitor | clock: 0, log: empty > 
              (start to 1) (start to 2)
     < 1 : Replica | gotTxns: (
                                < t1 : Txn | operations: ((xl :=read x) write(x,1) 
                                                          (zl :=read z) write(z,2)), readSet: empty, 
                                             writeSet: empty, localVars: (xl |-> [0], zl |-> [0]), 
                                             vecRead: empty, vecWrite: empty, txnSQN: 0, version: eptVersion >
                               
                               ),
                     datastore: (< x,[0],< 0,0 > >, < y,[0],< 0,0 > >), sqn: 0,
                     depVector: (< x,< 0,0 > > |-> (x |-> 0, y |-> 0, z |-> 0),
                                 < y,< 0,0 > > |-> (x |-> 0, y |-> 0, z |-> 0)), 
                      executing: null, submitted: null,
                      committed: null, aborted: null, certifying: null,
                      votes: noVote, voteSites: noVS,
                      commitSites: noVS, abortSites: noVS > 

     < 2 : Replica | gotTxns: (< t2 : Txn | operations: ((yl :=read y) write(y,8)
                                                         (zl :=read z) write(z,7)), readSet: empty, 
                                            writeSet: empty, localVars: (yl |-> [0], zl |-> [0]), 
                                            vecRead: empty, vecWrite: empty, txnSQN: 0, version: eptVersion >), 
                     datastore: empty, sqn: 0, 
                     depVector: empty,
                     executing: null, submitted: null,
                     committed: null, aborted: null, certifying: null,
                     votes: noVote, voteSites: noVS,
                     commitSites: noVS, abortSites: noVS >

     < 3 : Replica | gotTxns: emptyTxnList, 
                     datastore: (< z,[0],< 0,0 > >), sqn: 0, 
                     depVector: (< z,< 0,0 > > |-> (x |-> 0, y |-> 0, z |-> 0)), 
                      executing: null, submitted: null,
                      committed: null, aborted: null, certifying: null,
                     votes: noVote, voteSites: noVS,
                      commitSites: noVS, abortSites: noVS > .
)
endm

---rew initConfig .
---search initConfig =>! C:Config .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not rc(LOG:Log) .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not ra(LOG:Log) .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not cs(LOG:Log) .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not ua(LOG:Log) .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not si(LOG:Log) .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not psi(LOG:Log) .

search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  such that not nmsi(LOG:Log) .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not us(LOG:Log) .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not ser(LOG:Log) .

---search [1] initConfig =>! < M:Address : Monitor | log: LOG:Log, AS:AttributeSet > C:Config 
  ---such that not sser(LOG:Log) .

---(
rew cycle(dsg(
( 1 . 1 |-> < 1 |-> 0,1 |-> 2,false,< k1,< 0,0 > >,< k1,< 1,2 > > >,
    1 . 2 |-> < 1 |-> 3,1 |-> 5,false,< k1,< 0,0 > >,< k1,< 1,4 > > >, 
2 . 1 |-> < 2 |-> 1,2 |-> 4,true,< k1,< 0,0 > >,< k1,< 2,2 > > >))) .
)

---(
rew dsg-update(
(1 . 1 |-> < 1 |-> 0,1 |-> 2,false,(< k1,< 0,0 > >, < k2,< 0,0 > >),(< k1,< 1,2 > >, < k2,< 1,2 > >) >, 
1 . 2 |-> < 1 |-> 3,1 |-> 5,true,(< k1,< 2,2 > >, < k2,< 2,2 > >),(< k1,< 1,5 > >, < k2,< 1,5 > >) >,
2 . 1 |-> < 2 |-> 1,2 |-> 4,true,(< k1,< 0,0 > >, < k2,< 0,0 > >),(< k1,< 2,2 > >, < k2,< 2,2 > >) >)) .
)

---(
rew sser(
(1 . 1 |-> < 1 |-> 0,1 |-> 2,false,(< k1,< 0,0 > >, < k2,< 0,0 > >),(< k1,< 1,2 > >, < k2,< 1,2 > >) >, 
1 . 2 |-> < 1 |-> 3,1 |-> 5,true,(< k1,< 2,2 > >, < k2,< 2,2 > >),(< k1,< 1,5 > >, < k2,< 1,5 > >) >,
2 . 1 |-> < 2 |-> 1,2 |-> 4,true,(< k1,< 0,0 > >, < k2,< 0,0 > >),(< k1,< 2,2 > >, < k2,< 2,2 > >) >)) .
)

q

